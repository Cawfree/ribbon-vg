package uk.ac.manchester.sisp.ribbon.opengl;

public interface IGLES20 extends IGL {
	
	public static final int GL_CONSTANT_COLOR = 32769;
	public static final int GL_ONE_MINUS_CONSTANT_COLOR = 32770;
	public static final int GL_CONSTANT_ALPHA = 32771;
	public static final int GL_ONE_MINUS_CONSTANT_ALPHA = 32772;
	public static final int GL_BLEND_COLOR = 32773;
	public static final int GL_STREAM_DRAW = 35040;
	public static final int GL_CURRENT_VERTEX_ATTRIB = 34342;
	public static final int GL_STENCIL_BACK_FUNC = 34816;
	public static final int GL_STENCIL_BACK_FAIL = 34817;
	public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
	public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS = 34819;
	public static final int GL_STENCIL_BACK_REF = 36003;
	public static final int GL_STENCIL_BACK_VALUE_MASK = 36004;
	public static final int GL_STENCIL_BACK_WRITEMASK = 36005;
	public static final int GL_INT = 5124;
	public static final int GL_FRAGMENT_SHADER = 35632;
	public static final int GL_VERTEX_SHADER = 35633;
	public static final int GL_MAX_VERTEX_ATTRIBS = 34921;
	public static final int GL_MAX_VERTEX_UNIFORM_VECTORS = 36347;
	public static final int GL_MAX_VARYING_VECTORS = 36348;
	public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
	public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
	public static final int GL_MAX_TEXTURE_IMAGE_UNITS = 34930;
	public static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
	public static final int GL_SHADER_TYPE = 35663;
	public static final int GL_DELETE_STATUS = 35712;
	public static final int GL_LINK_STATUS = 35714;
	public static final int GL_VALIDATE_STATUS = 35715;
	public static final int GL_ATTACHED_SHADERS = 35717;
	public static final int GL_ACTIVE_UNIFORMS = 35718;
	public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH = 35719;
	public static final int GL_ACTIVE_ATTRIBUTES = 35721;
	public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 35722;
	public static final int GL_SHADING_LANGUAGE_VERSION = 35724;
	public static final int GL_CURRENT_PROGRAM = 35725;
	public static final int GL_FLOAT_VEC2 = 35664;
	public static final int GL_FLOAT_VEC3 = 35665;
	public static final int GL_FLOAT_VEC4 = 35666;
	public static final int GL_INT_VEC2 = 35667;
	public static final int GL_INT_VEC3 = 35668;
	public static final int GL_INT_VEC4 = 35669;
	public static final int GL_BOOL = 35670;
	public static final int GL_BOOL_VEC2 = 35671;
	public static final int GL_BOOL_VEC3 = 35672;
	public static final int GL_BOOL_VEC4 = 35673;
	public static final int GL_FLOAT_MAT2 = 35674;
	public static final int GL_FLOAT_MAT3 = 35675;
	public static final int GL_FLOAT_MAT4 = 35676;
	public static final int GL_SAMPLER_2D = 35678;
	public static final int GL_SAMPLER_CUBE = 35680;
	public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
	public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE = 34339;
	public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
	public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE = 34341;
	public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
	public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER = 34373;
	public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
	public static final int GL_COMPILE_STATUS = 35713;
	public static final int GL_INFO_LOG_LENGTH = 35716;
	public static final int GL_SHADER_SOURCE_LENGTH = 35720;
	public static final int GL_SHADER_COMPILER = 36346;
	public static final int GL_SHADER_BINARY_FORMATS = 36344;
	public static final int GL_NUM_SHADER_BINARY_FORMATS = 36345;
	public static final int GL_LOW_FLOAT = 36336;
	public static final int GL_MEDIUM_FLOAT = 36337;
	public static final int GL_HIGH_FLOAT = 36338;
	public static final int GL_LOW_INT = 36339;
	public static final int GL_MEDIUM_INT = 36340;
	public static final int GL_HIGH_INT = 36341;
	public static final int GL_STENCIL_INDEX = 6401;
	public static final int GL_PROGRAM_BINARY_LENGTH = 34625;
	public static final int GL_NUM_PROGRAM_BINARY_FORMATS = 34814;
	public static final int GL_PROGRAM_BINARY_FORMATS = 34815;
	public static final int GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 35723;
	public static final int GL_TEXTURE_WRAP_R = 32882;
	public static final int GL_TEXTURE_3D = 32879;
	public static final int GL_TEXTURE_BINDING_3D = 32874;
	public static final int GL_MAX_3D_TEXTURE_SIZE = 32883;
	public static final int GL_SAMPLER_3D = 35679;
	public static final int GL_UNSIGNED_INT_10_10_10_2 = 36342;
	public static final int GL_INT_10_10_10_2 = 36343;
	public static final int GL_DEBUG_OUTPUT_SYNCHRONOUS = 33346;
	public static final int GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 33347;
	public static final int GL_DEBUG_CALLBACK_FUNCTION = 33348;
	public static final int GL_DEBUG_CALLBACK_USER_PARAM = 33349;
	public static final int GL_DEBUG_SOURCE_API = 33350;
	public static final int GL_DEBUG_SOURCE_WINDOW_SYSTEM = 33351;
	public static final int GL_DEBUG_SOURCE_SHADER_COMPILER = 33352;
	public static final int GL_DEBUG_SOURCE_THIRD_PARTY = 33353;
	public static final int GL_DEBUG_SOURCE_APPLICATION = 33354;
	public static final int GL_DEBUG_SOURCE_OTHER = 33355;
	public static final int GL_DEBUG_TYPE_ERROR = 33356;
	public static final int GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = 33357;
	public static final int GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = 33358;
	public static final int GL_DEBUG_TYPE_PORTABILITY = 33359;
	public static final int GL_DEBUG_TYPE_PERFORMANCE = 33360;
	public static final int GL_DEBUG_TYPE_OTHER = 33361;
	public static final int GL_DEBUG_TYPE_MARKER = 33384;
	public static final int GL_DEBUG_TYPE_PUSH_GROUP = 33385;
	public static final int GL_DEBUG_TYPE_POP_GROUP = 33386;
	public static final int GL_DEBUG_SEVERITY_NOTIFICATION = 33387;
	public static final int GL_MAX_DEBUG_GROUP_STACK_DEPTH = 33388;
	public static final int GL_DEBUG_GROUP_STACK_DEPTH = 33389;
	public static final int GL_BUFFER = 33504;
	public static final int GL_SHADER = 33505;
	public static final int GL_PROGRAM = 33506;
	public static final int GL_QUERY = 33507;
	public static final int GL_SAMPLER = 33510;
	public static final int GL_MAX_LABEL_LENGTH = 33512;
	public static final int GL_MAX_DEBUG_MESSAGE_LENGTH = 37187;
	public static final int GL_MAX_DEBUG_LOGGED_MESSAGES = 37188;
	public static final int GL_DEBUG_LOGGED_MESSAGES = 37189;
	public static final int GL_DEBUG_SEVERITY_HIGH = 37190;
	public static final int GL_DEBUG_SEVERITY_MEDIUM = 37191;
	public static final int GL_DEBUG_SEVERITY_LOW = 37192;
	public static final int GL_DEBUG_OUTPUT = 37600;
	public static final int GL_CONTEXT_FLAG_DEBUG_BIT = 2;
	public static final int GL_STACK_OVERFLOW = 1283;
	public static final int GL_STACK_UNDERFLOW = 1284;
	public static final int GL_RG16F = 33327;
	public static final int GL_R16F = 33325;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 33297;
	public static final int GL_UNSIGNED_NORMALIZED = 35863;
	public static final int GL_CURRENT_QUERY = 34917;
	public static final int GL_QUERY_RESULT = 34918;
	public static final int GL_QUERY_RESULT_AVAILABLE = 34919;
	public static final int GL_MAX_COLOR_ATTACHMENTS = 36063;
	public static final int GL_MAX_DRAW_BUFFERS = 34852;
	public static final int GL_DRAW_BUFFER0 = 34853;
	public static final int GL_DRAW_BUFFER1 = 34854;
	public static final int GL_DRAW_BUFFER2 = 34855;
	public static final int GL_DRAW_BUFFER3 = 34856;
	public static final int GL_DRAW_BUFFER4 = 34857;
	public static final int GL_DRAW_BUFFER5 = 34858;
	public static final int GL_DRAW_BUFFER6 = 34859;
	public static final int GL_DRAW_BUFFER7 = 34860;
	public static final int GL_DRAW_BUFFER8 = 34861;
	public static final int GL_DRAW_BUFFER9 = 34862;
	public static final int GL_DRAW_BUFFER10 = 34863;
	public static final int GL_DRAW_BUFFER11 = 34864;
	public static final int GL_DRAW_BUFFER12 = 34865;
	public static final int GL_DRAW_BUFFER13 = 34866;
	public static final int GL_DRAW_BUFFER14 = 34867;
	public static final int GL_DRAW_BUFFER15 = 34868;
	public static final int GL_COLOR_ATTACHMENT1 = 36065;
	public static final int GL_COLOR_ATTACHMENT2 = 36066;
	public static final int GL_COLOR_ATTACHMENT3 = 36067;
	public static final int GL_COLOR_ATTACHMENT4 = 36068;
	public static final int GL_COLOR_ATTACHMENT5 = 36069;
	public static final int GL_COLOR_ATTACHMENT6 = 36070;
	public static final int GL_COLOR_ATTACHMENT7 = 36071;
	public static final int GL_COLOR_ATTACHMENT8 = 36072;
	public static final int GL_COLOR_ATTACHMENT9 = 36073;
	public static final int GL_COLOR_ATTACHMENT10 = 36074;
	public static final int GL_COLOR_ATTACHMENT11 = 36075;
	public static final int GL_COLOR_ATTACHMENT12 = 36076;
	public static final int GL_COLOR_ATTACHMENT13 = 36077;
	public static final int GL_COLOR_ATTACHMENT14 = 36078;
	public static final int GL_COLOR_ATTACHMENT15 = 36079;
	public static final int GL_ANY_SAMPLES_PASSED = 35887;
	public static final int GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 36202;
	public static final int GL_CONTEXT_ROBUST_ACCESS = 37107;
	public static final int GL_VERTEX_SHADER_BIT = 1;
	public static final int GL_FRAGMENT_SHADER_BIT = 2;
	public static final int GL_PROGRAM_SEPARABLE = 33368;
	public static final int GL_ACTIVE_PROGRAM = 33369;
	public static final int GL_PROGRAM_PIPELINE_BINDING = 33370;
	public static final int GL_TEXTURE_COMPARE_MODE = 34892;
	public static final int GL_TEXTURE_COMPARE_FUNC = 34893;
	public static final int GL_COMPARE_REF_TO_TEXTURE = 34894;
	public static final int GL_SAMPLER_2D_SHADOW = 35682;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 33296;
	public static final int GL_RED = 6403;
	public static final int GL_RG = 33319;
	public static final int GL_R8 = 33321;
	public static final int GL_RG8 = 33323;
	public static final int GL_R32F = 33326;
	public static final int GL_RG32F = 33328;
	public static final int GL_UNSIGNED_INT_2_10_10_10_REV = 33640;
	public static final int GL_UNPACK_ROW_LENGTH = 3314;
	public static final int GL_UNPACK_SKIP_ROWS = 3315;
	public static final int GL_UNPACK_SKIP_PIXELS = 3316;
	public static final int GL_SHADER_BINARY_DMP = 37456;
	public static final int GL_ALL_SHADER_BITS = -1;
	public static final int GL_DEPTH_COMPONENT = 6402;
	
	/* GL2ES2. */
	public abstract void glAttachShader(int arg0, int arg1);
	//public abstract void glBeginQuery(int arg0, int arg1);
	public abstract void glBindAttribLocation(int arg0, int arg1, java.lang.String arg2);
	public abstract void glBlendColor(float arg0, float arg1, float arg2, float arg3);
	public abstract void glCompileShader(int arg0);
	//public abstract void glCompressedTexImage3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, java.nio.Buffer arg8);
	//public abstract void glCompressedTexImage3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, long arg8);
	//public abstract void glCompressedTexSubImage3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, java.nio.Buffer arg10);
	//public abstract void glCompressedTexSubImage3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, long arg10);
	//public abstract void glCopyTexSubImage3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8);
	public abstract int glCreateProgram();
	public abstract int glCreateShader(int arg0);
	//public abstract void glDebugMessageControl(int arg0, int arg1, int arg2, int arg3, java.nio.IntBuffer arg4, boolean arg5);
	//public abstract void glDebugMessageControl(int arg0, int arg1, int arg2, int arg3, int[] arg4, int arg5, boolean arg6);
	//public abstract void glDebugMessageInsert(int arg0, int arg1, int arg2, int arg3, int arg4, java.lang.String arg5);
	public abstract void glDeleteProgram(int arg0);
	//public abstract void glDeleteQueries(int arg0, java.nio.IntBuffer arg1);
	//public abstract void glDeleteQueries(int arg0, int[] arg1, int arg2);
	public abstract void glDeleteShader(int arg0);
	public abstract void glDetachShader(int arg0, int arg1);
	public abstract void glDisableVertexAttribArray(int arg0);
	public abstract void glEnableVertexAttribArray(int arg0);
	//public abstract void glEndQuery(int arg0);
	//public abstract void glFramebufferTexture3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5);
	//public abstract void glGenQueries(int arg0, java.nio.IntBuffer arg1);
	//public abstract void glGenQueries(int arg0, int[] arg1, int arg2);
	//public abstract void glGetActiveAttrib(int arg0, int arg1, int arg2, java.nio.IntBuffer arg3, java.nio.IntBuffer arg4, java.nio.IntBuffer arg5, java.nio.ByteBuffer arg6);
	public abstract void glGetActiveAttrib(int arg0, int arg1, int arg2, int[] arg3, int arg4, int[] arg5, int arg6, int[] arg7, int arg8, byte[] arg9, int arg10);
	//ublic abstract void glGetActiveUniform(int arg0, int arg1, int arg2, java.nio.IntBuffer arg3, java.nio.IntBuffer arg4, java.nio.IntBuffer arg5, java.nio.ByteBuffer arg6);
	public abstract void glGetActiveUniform(int arg0, int arg1, int arg2, int[] arg3, int arg4, int[] arg5, int arg6, int[] arg7, int arg8, byte[] arg9, int arg10);
	public abstract void glGetAttachedShaders(int arg0, int arg1, java.nio.IntBuffer arg2, java.nio.IntBuffer arg3);
	public abstract void glGetAttachedShaders(int arg0, int arg1, int[] arg2, int arg3, int[] arg4, int arg5);
	public abstract int glGetAttribLocation(int arg0, java.lang.String arg1);
	//public abstract int glGetDebugMessageLog(int arg0, int arg1, java.nio.IntBuffer arg2, java.nio.IntBuffer arg3, java.nio.IntBuffer arg4, java.nio.IntBuffer arg5, java.nio.IntBuffer arg6, java.nio.ByteBuffer arg7);
	//public abstract int glGetDebugMessageLog(int arg0, int arg1, int[] arg2, int arg3, int[] arg4, int arg5, int[] arg6, int arg7, int[] arg8, int arg9, int[] arg10, int arg11, byte[] arg12, int arg13);
	//public abstract void glGetObjectLabel(int arg0, int arg1, int arg2, java.nio.IntBuffer arg3, java.nio.ByteBuffer arg4);
	//public abstract void glGetObjectLabel(int arg0, int arg1, int arg2, int[] arg3, int arg4, byte[] arg5, int arg6);
	//public abstract void glGetObjectPtrLabel(java.nio.Buffer arg0, int arg1, java.nio.IntBuffer arg2, java.nio.ByteBuffer arg3);
	//public abstract void glGetObjectPtrLabel(java.nio.Buffer arg0, int arg1, int[] arg2, int arg3, byte[] arg4, int arg5);
	//public abstract void glGetProgramBinary(int arg0, int arg1, java.nio.IntBuffer arg2, java.nio.IntBuffer arg3, java.nio.Buffer arg4);
	//public abstract void glGetProgramBinary(int arg0, int arg1, int[] arg2, int arg3, int[] arg4, int arg5, java.nio.Buffer arg6);
	//public abstract void glGetProgramInfoLog(int arg0, int arg1, java.nio.IntBuffer arg2, java.nio.ByteBuffer arg3);
	//public abstract void glGetProgramInfoLog(int arg0, int arg1, int[] arg2, int arg3, byte[] arg4, int arg5);
	public abstract void glGetProgramiv(int arg0, int arg1, java.nio.IntBuffer arg2);
	public abstract void glGetProgramiv(int arg0, int arg1, int[] arg2, int arg3);
	//public abstract void glGetQueryObjectuiv(int arg0, int arg1, java.nio.IntBuffer arg2);
	//public abstract void glGetQueryObjectuiv(int arg0, int arg1, int[] arg2, int arg3);
	//public abstract void glGetQueryiv(int arg0, int arg1, java.nio.IntBuffer arg2);
	//public abstract void glGetQueryiv(int arg0, int arg1, int[] arg2, int arg3);
	//public abstract void glGetShaderInfoLog(int arg0, int arg1, java.nio.IntBuffer arg2, java.nio.ByteBuffer arg3);
	//public abstract void glGetShaderInfoLog(int arg0, int arg1, int[] arg2, int arg3, byte[] arg4, int arg5);
	//public abstract void glGetShaderSource(int arg0, int arg1, java.nio.IntBuffer arg2, java.nio.ByteBuffer arg3);
	public abstract void glGetShaderSource(int arg0, int arg1, int[] arg2, int arg3, byte[] arg4, int arg5);
	public abstract void glGetShaderiv(int arg0, int arg1, java.nio.IntBuffer arg2);
	public abstract void glGetShaderiv(int arg0, int arg1, int[] arg2, int arg3);
	public abstract int glGetUniformLocation(int arg0, java.lang.String arg1);
	public abstract void glGetUniformfv(int arg0, int arg1, java.nio.FloatBuffer arg2);
	public abstract void glGetUniformfv(int arg0, int arg1, float[] arg2, int arg3);
	public abstract void glGetUniformiv(int arg0, int arg1, java.nio.IntBuffer arg2);
	public abstract void glGetUniformiv(int arg0, int arg1, int[] arg2, int arg3);
	public abstract void glGetVertexAttribfv(int arg0, int arg1, java.nio.FloatBuffer arg2);
	public abstract void glGetVertexAttribfv(int arg0, int arg1, float[] arg2, int arg3);
	public abstract void glGetVertexAttribiv(int arg0, int arg1, java.nio.IntBuffer arg2);
	public abstract void glGetVertexAttribiv(int arg0, int arg1, int[] arg2, int arg3);
	public abstract boolean glIsProgram(int arg0);
	//public abstract boolean glIsQuery(int arg0);
	public abstract boolean glIsShader(int arg0);
	public abstract void glLinkProgram(int arg0);
	//public abstract void glObjectLabel(int arg0, int arg1, int arg2, java.nio.ByteBuffer arg3);
	//public abstract void glObjectLabel(int arg0, int arg1, int arg2, byte[] arg3, int arg4);
	//public abstract void glObjectPtrLabel(java.nio.Buffer arg0, int arg1, java.nio.ByteBuffer arg2);
	//public abstract void glObjectPtrLabel(java.nio.Buffer arg0, int arg1, byte[] arg2, int arg3);
	//public abstract void glPopDebugGroup();
	//public abstract void glProgramBinary(int arg0, int arg1, java.nio.Buffer arg2, int arg3);
	//public abstract void glPushDebugGroup(int arg0, int arg1, int arg2, java.nio.ByteBuffer arg3);
	//public abstract void glPushDebugGroup(int arg0, int arg1, int arg2, byte[] arg3, int arg4);
	/** A single-entity glShaderSource implementation is cross-platform. **/
	public abstract void glShaderSource(int arg0, String arg2);
	//public abstract void glShaderSource(int arg0, int arg1, java.lang.String[] arg2, java.nio.IntBuffer arg3);
	//public abstract void glShaderSource(int arg0, int arg1, java.lang.String[] arg2, int[] arg3, int arg4);
	public abstract void glStencilFuncSeparate(int arg0, int arg1, int arg2, int arg3);
	public abstract void glStencilMaskSeparate(int arg0, int arg1);
	public abstract void glStencilOpSeparate(int arg0, int arg1, int arg2, int arg3);
	//public abstract void glTexImage3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, java.nio.Buffer arg9);
	//public abstract void glTexImage3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, long arg9);
	//public abstract void glTexSubImage3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, java.nio.Buffer arg10);
	//public abstract void glTexSubImage3D(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, long arg10);
	public abstract void glUniform1f(int arg0, float arg1);
	public abstract void glUniform1fv(int arg0, int arg1, java.nio.FloatBuffer arg2);
	public abstract void glUniform1fv(int arg0, int arg1, float[] arg2, int arg3);
	public abstract void glUniform1i(int arg0, int arg1);
	public abstract void glUniform1iv(int arg0, int arg1, java.nio.IntBuffer arg2);
	public abstract void glUniform1iv(int arg0, int arg1, int[] arg2, int arg3);
	public abstract void glUniform2f(int arg0, float arg1, float arg2);
	public abstract void glUniform2fv(int arg0, int arg1, java.nio.FloatBuffer arg2);
	public abstract void glUniform2fv(int arg0, int arg1, float[] arg2, int arg3);
	public abstract void glUniform2i(int arg0, int arg1, int arg2);
	//public abstract void glUniform2iv(int arg0, int arg1, java.nio.IntBuffer arg2);
	//public abstract void glUniform2iv(int arg0, int arg1, int[] arg2, int arg3);
	//public abstract void glUniform3f(int arg0, float arg1, float arg2, float arg3);
	public abstract void glUniform3fv(int arg0, int arg1, java.nio.FloatBuffer arg2);
	public abstract void glUniform3fv(int arg0, int arg1, float[] arg2, int arg3);
	public abstract void glUniform3i(int arg0, int arg1, int arg2, int arg3);
	public abstract void glUniform3iv(int arg0, int arg1, java.nio.IntBuffer arg2);
	public abstract void glUniform3iv(int arg0, int arg1, int[] arg2, int arg3);
	public abstract void glUniform4f(int arg0, float arg1, float arg2, float arg3, float arg4);
	public abstract void glUniform4fv(int arg0, int arg1, java.nio.FloatBuffer arg2);
	public abstract void glUniform4fv(int arg0, int arg1, float[] arg2, int arg3);
	public abstract void glUniform4i(int arg0, int arg1, int arg2, int arg3, int arg4);
	public abstract void glUniform4iv(int arg0, int arg1, java.nio.IntBuffer arg2);
	public abstract void glUniform4iv(int arg0, int arg1, int[] arg2, int arg3);
	public abstract void glUniformMatrix2fv(int arg0, int arg1, boolean arg2, java.nio.FloatBuffer arg3);
	public abstract void glUniformMatrix2fv(int arg0, int arg1, boolean arg2, float[] arg3, int arg4);
	public abstract void glUniformMatrix3fv(int arg0, int arg1, boolean arg2, java.nio.FloatBuffer arg3);
	public abstract void glUniformMatrix3fv(int arg0, int arg1, boolean arg2, float[] arg3, int arg4);
	public abstract void glUniformMatrix4fv(int arg0, int arg1, boolean arg2, java.nio.FloatBuffer arg3);
	public abstract void glUniformMatrix4fv(int arg0, int arg1, boolean arg2, float[] arg3, int arg4);
	public abstract void glUseProgram(int arg0);
	public abstract void glValidateProgram(int arg0);
	public abstract void glVertexAttrib1f(int arg0, float arg1);
	public abstract void glVertexAttrib1fv(int arg0, java.nio.FloatBuffer arg1);
	public abstract void glVertexAttrib1fv(int arg0, float[] arg1, int arg2);
	public abstract void glVertexAttrib2f(int arg0, float arg1, float arg2);
	public abstract void glVertexAttrib2fv(int arg0, java.nio.FloatBuffer arg1);
	public abstract void glVertexAttrib2fv(int arg0, float[] arg1, int arg2);
	public abstract void glVertexAttrib3f(int arg0, float arg1, float arg2, float arg3);
	public abstract void glVertexAttrib3fv(int arg0, java.nio.FloatBuffer arg1);
	public abstract void glVertexAttrib3fv(int arg0, float[] arg1, int arg2);
	public abstract void glVertexAttrib4f(int arg0, float arg1, float arg2, float arg3, float arg4);
	public abstract void glVertexAttrib4fv(int arg0, java.nio.FloatBuffer arg1);
	public abstract void glVertexAttrib4fv(int arg0, float[] arg1, int arg2);
	/** @int arg5 is expected as @long on dekstop platforms. **/
	public abstract void glVertexAttribPointer(int arg0, int arg1, int arg2, boolean arg3, int arg4, int arg5);
	public abstract void glReleaseShaderCompiler();
	public abstract void glShaderBinary(int arg0, java.nio.IntBuffer arg1, int arg2, java.nio.Buffer arg3, int arg4);
	public abstract void glShaderBinary(int arg0, int[] arg1, int arg2, int arg3, java.nio.Buffer arg4, int arg5);
	public abstract void glGetShaderPrecisionFormat(int arg0, int arg1, java.nio.IntBuffer arg2, java.nio.IntBuffer arg3);
	public abstract void glGetShaderPrecisionFormat(int arg0, int arg1, int[] arg2, int arg3, int[] arg4, int arg5);
	//public abstract void glDepthRange(double arg0, double arg1);
	//public abstract void glClearDepth(double arg0);
	
}